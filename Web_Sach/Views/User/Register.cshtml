@model Web_Sach.Models.EF.Register
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <!-- Latest compiled and minified CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Latest compiled JavaScript -->
    <link href="~/Scripts/Client/CSS/loading.css" rel="stylesheet" />
    <style>
        body {
            background-color: #fff;
            background-image: url('../../data/images/book.jpg');
            background-repeat: no-repeat;
            background-size: cover;
            background-position: center;
        }

        #wrap .resgister {
            border-radius: 10px;
            background-color: #fff;
            margin-bottom: 50px;
        }

        #cboHuyen, #cboXa {
            display: block;
            width: 50%;
            padding: 0.375rem 0.75rem;
            font-size: 1rem;
            font-weight: 400;
            line-height: 1.5;
            color: var(--bs-body-color);
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            background-color: var(--bs-body-bg);
            background-clip: padding-box;
            border: var(--bs-border-width) solid var(--bs-border-color);
            border-radius: var(--bs-border-radius);
            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        }
    </style>
</head>
<body>

    <div id="wrap">
        <div class="container mt-5 w-50 resgister">
            <div class="row justify-content-around " id="register">
                <h1 class="text-center text-uppercase h3 mt-4">Đăng ký tài khoản</h1>
                @using (Html.BeginForm("Register", "User", FormMethod.Post))
                {
                    <div class="form-group">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @*@if (ViewBag.Success != null)
                            {
                                <div class=" alert alert-success">@ViewBag.Success</div>
                            }*@
                        @if (ViewBag.Success != null)
                        {
                            <script>

                                setTimeout(function () {
                                    // Hiển thị thông báo trong một khoảng thời gian ngắn
                                    var isConfirmed = confirm("Đăng ký thành công! Nhấn OK để chuyển hướng đến trang đăng nhập.");

                                    // Nếu người dùng nhấn OK, chuyển hướng đến trang đăng nhập
                                    if (isConfirmed) {
                                        window.location.href = '/dang-nhap';
                                    }
                                }, 2000);
                            </script>
                        }
                    </div>
                    <div class="form-horizontal  ms-5">
                        @Html.AntiForgeryToken()

                        <div class="form-group m-3">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2", @style = "margin:3px;width:100%" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group  m-3">
                            @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2", @style = "margin:3px" })
                            <div class="col-md-10">
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control", @style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group  m-3">
                            @Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label col-md-2", @style = "width:100% ; margin:3px;" })
                            <div class="col-md-10">
                                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", @style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group  m-3">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2", @style = "margin:3px" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group  m-3">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2", @style = "margin:3px" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Address, new { @class = "form-control", @style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group  m-3">
                            @Html.LabelFor(model => model.MaTinh, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.MaTinh, null, new { @class = "form-control", @style = "width:50%", @id = "cboTinh" })
                                @Html.ValidationMessageFor(model => model.MaTinh, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group  m-3">
                            @Html.LabelFor(model => model.MaHuyen, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <select id="cboHuyen" name="MaHuyen">
                                </select>
                                @Html.ValidationMessageFor(model => model.MaHuyen, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group  m-3">
                            @Html.LabelFor(model => model.MaXa, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @*@Html.DropDownListFor(model => model.MaXa, null, new { @class = "form-control", @style = "width:50%" })*@
                                <select id="cboXa" name="MaXa">
                                </select>
                                @Html.ValidationMessageFor(model => model.MaXa, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group  m-3">
                            @*<label>Email</label>
                            <input type="email" name="Email" class="form-control"  />
                            <p class="error-email" style="display: none;color:red"></p>*@
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2", @style = "margin:3px" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @style = "width:100%", @type = "email" })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
                        </div>
                        <div class="form-group  m-3">
                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2", @style = "margin:3px" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", @style = "width:100%", @type = "tel", @pattern = "[0-9]{3}[0-9]{3}[0-9]{4}", @placeholder = "0352364444" })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group m-3">
                            @Html.LabelFor(model => model.GioiTinh, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 mt-1 mb-3">
                                <div class="radiobox d-flex">
                                    <div class="form-check">
                                        @Html.RadioButtonFor(model => model.GioiTinh, "Nam", new { @id = "namRadio", @name = "gender", @class = "form-check-input", @checked = "checked" })
                                        <label for="namRadio" class="form-check-label ms-2 me-2">Nam</label>
                                    </div>
                                    <div class="form-check">
                                        @Html.RadioButtonFor(model => model.GioiTinh, "Nữ", new { @id = "nuRadio", @name = "gender", @class = "form-check-input" })
                                        <label for="nuRadio" class="form-check-label ms-2 me-2">Nữ</label>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.GioiTinh, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group m-3">
                            @Html.LabelFor(model => model.NgaySinh, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10  mt-1 mb-3">
                                @Html.TextBoxFor(model => model.NgaySinh, new { @type = "date", @class = "form-control" })

                                @*@Html.TextBoxFor(model => model.NgaySinh, new { htmlAttributes = new { @type = "date", @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group  m-3">
                            <div class="row ">
                                <div class="col-md-6 text-center">
                                    <button type="submit" class="btn btn-dark">Đăng ký</button>
                                </div>
                                <div class="col-md-6 text-center">

                                    <button type="reset" class="btn btn-danger">Hủy</button>
                                </div>

                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

    </div>
    <div id="preloader" style="display:none;">
        <div class="loader"></div>
    </div>
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/Client/script/loading.js"></script>
    <script type="text/javascript"> 
        //$('input[name="Email"]').on("change", function () {
        //    let Email = $(this).val();
        //    let emailRegex = new RegExp("^[\\w-]+(\\.[\\w-]+)*@@([\\w-]+\\.)+[a-zA-Z]{2,7}$");
        //    if (!emailRegex.test(Email)) {
        //        $(".error-email").text("Nhập sai định dạng email").show();
        //        return false; // Hiển thị cảnh báo lỗi khi địa chỉ email không hợp lệ
        //    }
        //    else {
        //        $(".error-email").hide(); // Ẩn cảnh báo lỗi khi địa chỉ email hợp lệ
        //    }
        //})
      
        $(document).ready(function () {
                $("#cboTinh").off("click").on("change", function () {
                    let id = $("#cboTinh option:selected").val();
                    $.ajax({
                        url: '@Url.Action("loadHuyen","User")',
                        type: "GET",
                        data: { tinhId: id },
                        success: function (res) {
                            let s = '<option value="-1">---Chọn 1 huyện---</option>';
                            for (var i = 0; i < res.length; i++) {
                                s += '<option value="' + res[i].id+'">'+res[i].name+'</option>';
                            }
                            $('#cboHuyen').html(s);
                        }
                    });// end ajax
                })// sk click chọn tỉnh
                 $("#cboHuyen").off("click").on("change", function () {
     let id = $("#cboHuyen option:selected").val();
     $.ajax({
         url: '@Url.Action("loadXa","User")',
         type: "GET",
         data: { huyenId: id },
         success: function (res) {
             let s = '<option value="-1">---Chọn 1 xã---</option>';
             for (var i = 0; i < res.length; i++) {
                 s += '<option value="' + res[i].id+'">'+res[i].name+'</option>';
             }
             $('#cboXa').html(s);
         }
     });// end ajax
 })

            });
    </script>
</body>
</html>
